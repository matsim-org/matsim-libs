<?xml version="1.0" encoding="utf-8"?>

<!-- $Id$ -->

<!-- ============================================================ -->

<!-- Date: 2005-09-22 -->
<!-- More generic version of the enhanced matsim plans dtd.
     It holds home and prim_loc inside the knowledge without
     distinguish them anymore from other locations.
     Coords and link id are now subtags.
     Inside the plans the coords are also subtags. only the linkid
     will be kept because of consistency with the matsim
     relaxation process.
     Also the travelcards element and the zones are removed. -->

<!-- For further information or questions, please contact
     Michael Balmer, balmermi at inf dot ethz dot ch -->

<!-- ============================================================ -->

<!ELEMENT plans          (person)*>
<!ATTLIST plans
          name           CDATA   #IMPLIED
          reference_layer  CDATA #IMPLIED
          xml:lang       NMTOKEN "de-CH">

<!ELEMENT person         (travelcard*,desires?,knowledge?,plan*)>
<!ATTLIST person
          id             CDATA                    #REQUIRED
          sex            (f|m)                    #IMPLIED
          age            CDATA                    #IMPLIED
          license        (yes|no)                 #IMPLIED
          car_avail      (always|never|sometimes) #IMPLIED
          employed       (yes|no)                 #IMPLIED>

<!ELEMENT travelcard     EMPTY>
<!ATTLIST travelcard
          type           (ch-GA|ch-HT|ch-HT-1y|ch-HT-2y|ch-HT-mobility|unknown) "unknown">

<!ELEMENT desires        (actDur*)>
<!ATTLIST desires
          desc           CDATA    #IMPLIED>

<!ELEMENT actDur         EMPTY>
<!ATTLIST actDur
          type           CDATA    #REQUIRED
          dur            CDATA    #REQUIRED>

<!ELEMENT knowledge      (activityspace*,activity*)>
<!ATTLIST knowledge
          desc           CDATA    #IMPLIED>

<!ELEMENT activityspace  (param+)>
<!ATTLIST activityspace
          type           (ellipse|cassini|superellipse|bean)    #REQUIRED
          activity_type  (all|home|work|education|shop|leisure) #REQUIRED>

<!ELEMENT param          EMPTY>
<!ATTLIST param
          name           CDATA #REQUIRED
          value          CDATA #REQUIRED>

<!ELEMENT activity       (location+)>
<!ATTLIST activity
          type           CDATA #REQUIRED>

<!ELEMENT location       (capacity?,opentime*)>
<!ATTLIST location
          type           CDATA #IMPLIED
          id             CDATA #REQUIRED
          x              CDATA #IMPLIED
          y              CDATA #IMPLIED
          freq           CDATA #IMPLIED
          isPrimary      (yes|no) "no">

<!ELEMENT capacity       EMPTY>
<!ATTLIST capacity
          value          CDATA #REQUIRED>

<!ELEMENT opentime       EMPTY>
<!ATTLIST opentime
          day            (mon|tue|wed|thu|fri|sat|sun|wkday|wkend|wk) "wk"
          start_time     CDATA                                        #REQUIRED
          end_time       CDATA                                        #REQUIRED>

<!ELEMENT plan           (act|leg)*>
<!ATTLIST plan
          score          CDATA    #IMPLIED
          age            CDATA    #IMPLIED
          type           CDATA    #IMPLIED
          selected       (yes|no) "no">

<!ELEMENT act            EMPTY>
<!ATTLIST act
          type           CDATA #REQUIRED
          x              CDATA #IMPLIED
          y              CDATA #IMPLIED
          link           CDATA #IMPLIED
          facility       CDATA #IMPLIED
          start_time     CDATA #IMPLIED
          end_time       CDATA #IMPLIED
          dur            CDATA #IMPLIED
          ref_id         CDATA #IMPLIED>

<!ELEMENT leg            (route)?>
<!ATTLIST leg
          num            CDATA                                                 #IMPLIED
          mode           CDATA                                                 #REQUIRED
          dep_time       CDATA                                                 #IMPLIED
          trav_time      CDATA                                                 #IMPLIED
          arr_time       CDATA                                                 #IMPLIED>

<!ELEMENT route          (#PCDATA)>
<!ATTLIST route
          type           (dist|trav-time|num-nodes|num-intersects) #IMPLIED
          dist           CDATA #IMPLIED
          trav_time      CDATA #IMPLIED
          num_nodes      CDATA #IMPLIED
          num_intersects CDATA #IMPLIED>

<!-- ============================================================ -->

<!-- ROOT ELEMENT plans:
     In here all individuals are stored including their desired
     plan. -->

<!-- ATTRIBUTE name:
     It is always a good idea to give a plans file a descriptive
     name for better identification.
     Normally it should describe, which company / institute / etc..
     created that plans file and / or what has been modified. -->
<!-- ATTRIBUTE reference_layer:
     The name of a layer in the world. <act>s can store a reference
     to a zone/entry in that layer, e.g. to maintain the cell-id
     for which the act should be counted to. optional. -->
<!-- ATTRIBUTE xml:lang:
     Defines the language settings (see xml spec). -->

<!-- ============================================================ -->

<!-- ELEMENT person:
     Each individual is listed here. -->

<!-- ATTRIBUTE id:
     Each person holds a UNIQUE id for identification.
     format := unsigned integer -->
<!-- ATTRIBUTE sex:
     If known, each person has a sex. -->
<!-- ATTRIBUTE age:
     If known, each person has an age.
     format := unsigned integer (inclusive zero) -->
<!-- ATTRIBUTE license:
     Defines if this person holds a drivers-license. -->
<!-- ATTRIBUTE car_avail:
     Defines if this person has access to a car (always, sometimes
     or never). -->
<!-- ATTRIBUTE employed:
     Defines if this person has a job. -->

<!-- ============================================================ -->

<!-- ELEMENT knowledge:
     Each person can hold personal knowledge of any kind.
     At the moment only locations of activities are used. -->

<!-- ATTRIBUTE desc:
     Any information about that knowledge can be written in it.
     format := string
     units  := N/A -->

<!-- ============================================================ -->

<!-- ELEMENT actspace:
     Each person can hold his own activity space of a speciafies
     activity type. but only one act space per type. -->

<!-- ATTRIBUTE type:
     defines the form of the activity space. at the moment only ellipse
     and cassini curve.
     format := string
     units  := N/A -->
<!-- ATTRIBUTE activity_type:
     defines the activity type of the activity space.
     format := string
     units  := N/A -->

<!-- ============================================================ -->

<!-- ELEMENT param:
     defines the actual shape of the activity space. it differs by
     the number of parameter needed for different curves. Therefore,
     the description is kept flexible. -->

<!-- ATTRIBUTE name:
     the name of the paprameter. each curve has a set of required
     paramter to describe the actual position. For the two already
     defined curves the parameter are the following:
     ellipse:
     - x:     x coordinate of the center of the ellipse        => double
     - y:     y coordinate of the center of the ellipse        => double
     - theta: the angle of the first axis of the ellipse.      => ]-pi,pi]
     - a:     the length of the first axis of the ellipse      => unsigned double
     - b:     the length of the bigger axis of the ellipse     => unsigned double
     - cover: the fraction of cover of the (pre-set) locations => ]0.0,1.0]
     cassini oval:
     - same as above
     format := string
     units  := N/A -->
<!-- ATTRIBUTE value:
     the value of the param.
     format := see above
     units  := N/A -->

<!-- ============================================================ -->

<!-- ELEMENT activity:
     Each activity is listed seperatly. A person can have knowledge
     about several locations of a specific activity.
     Note: We choose a seperate tag name for that to distinguish
           between knowlegde of an activity and an activity (act)
           of a plan. -->

<!-- ATTRIBUTE type:
     The type of the activity.
     format := string
     units  := N/A -->

<!-- ============================================================ -->

<!-- ELEMENT location:
     Each location of an activity a person knows is listed here
     seperately. -->

<!-- ATTRIBUTE type:
     The location type. Can by any defined type of a location. From
     a link to cell, block, municipality and so on.
     format := string
     units  := N/A -->

<!-- ATTRIBUTE id:
     the id of the location.
     format := unsigned integer
     units  := N/A -->

<!-- ATTRIBUTE x,y:
     if no id is defined then the coords must be given
     format := double
     units  := meter -->

<!-- ATTRIBUTE freq:
     defines how often the person was at that place (in one year)
     format := unsigned integer
     units  := N/A -->

<!-- ============================================================ -->

<!-- ELEMENT capacity:
     A cell can hold a limited capacity per activity.
     A capacity is the maximum number of something in a given time range,
     e.g. number of costumers shopping at the same time or number of
     workplaces.
     If this element is not specified, then the capacity of the defined
     activity is unlimited. -->

<!-- ATTRIBUTE value:
     Value of the capacity.
     format: unsigned integer -->

<!-- ============================================================ -->

<!-- ELEMENT opentime:
     Each zone/activity combination can hold a variable amount of opening
     times describing on what times the facility is open and therefore
     accessible.
     The opening times are specified on a daily basis for maximum week periods.
     If no opentime element is specified, the facility is closed all the time.
     To make a facility open all the time, include the following opentime
     element:
     <opentime day="wk" start_time="00:00" end_time="24:00" />
     If no opentime element is specified, then the defined activity is always
     open. -->

<!-- ATTRIBUTE day:
     A schedule can be set for a single day, for all weekdays,
     the weekend or for the whole week. Schedules for single days always
     override schedules for time ranges, e.g. a "mon" schedule for
     Monday overrides weekday or whole week schedules.

     ATTENTION: for a given facility, schedules must
     not overlap in time. I.e.
       <opentime day="mon" start_time="09:00" end_time="14:00" />
       <opentime day="mon" start_time="11:00" end_time="18:00" />
     is not allowed.
     mon - Monday
     tue - Tuesday
     wed - Wednesday
     thu - Thursday
     fri - Friday
     sat - Saturday
     sun - Sunday
     wkday - week days (mon through fri)
     wkend - week end (sat, sun)
     wk - whole week (mon through sun)
     format: string (can only be chosen from given values) -->

<!-- ATTRIBUTE start_time:
     Defines when a facility opens.
     format: compatible with the locale defined in xml:lang -->

<!-- ATTRIBUTE end_time:
     Defines when a facility closes.
     format: compatible with the locale defined in xml:lang -->

<!-- If start_time > end_time, then the facility is opened over
     midnight. -->

<!-- ============================================================ -->

<!-- ELEMENT travelcard:
     Each available travel card of this person is listed here
     seperately. -->

<!-- ATTRIBUTE type:
     Since the travel cards differ much from country to country,
     there is no common definition of it. So, only a defined
     string is used for that:
     First set the characters for the specific country (i.e. ch
     for Switzerland, de for Germany, and so on), followed by
     a dash and the the string which defines the type of the
     travelcard. At the moment available types are:
     ch-GA := "Generalabonoment" in Switzerland
     ch-HT := "Halbtax" in Switzerland -->

<!-- ============================================================ -->

<!-- ELEMENT plan:
     Each person holds at least one plan.  A plan holds a sequence of
     act-leg-act-leg... tags.  Such a chain has to start and end with
     an act(ivity).  Between two acts there must be EXACTLY one
     leg. -->

<!-- ATTRIBUTE score:
     Measures the "performance" of this plan based on the outcome of
     the execution of this plan within the simulation (possibly
     several simulations).  After a plan is chosen for a simulation
     and is simulated by the sim, a score will be calculated.  So,
     initial plans don't need to provide a score.  It is just for
     internal use.
     format := double -->

<!-- ATTRIBUTE age:
     How long this person has had this plan.  (E.g., number of
     iterations.)
     Not used yet (Oct. 2004).
     format := unsigned integer -->

<!-- ATTRIBUTE selected:
     If a person has more than one plan, one is marked as the selected
     plan, i.e., the one to be used by the simulation or other
     modules.  For internal use.  Initial plans do not need to provide
     this. -->

<!-- ============================================================ -->

<!-- ELEMENT act:
     Defines an activity of a person (like working, shopping, etc.).
     An activity is placed on a defined coordinate/link of the given
     network. -->

<!-- ATTRIBUTE type:
     Each activity has to have a type, like w(ork), l(eisure),
     h(ome), s(hopping), e(ducation), etc.
     format := string -->

<!-- ATTRIBUTE x:
     The x coordinate of the activity.
     If x and y is not defined, the link id has to be given!
     format := double
     units  := meter -->

<!-- ATTRIBUTE y:
     The y coordinate of the activity.
     If x and y is not defined, the link id has to be given!
     format := double
     units  := meter -->

<!-- ATTRIBUTE link:
     The id of the link where this activity will be performed.  If
     this attribute is not given, the x and y attributes must be
     defined.
     format := unsigned integer
     unit   := N/A -->

<!-- NOTE: Either (x,y) or link must be defined, otherwise the
           activity cannot be matched on the given network (see
           network_v1.dtd on matsim.org). -->

<!-- ATTRIBUTE start_time:
     Defines when an activity should start.
     format := "hh:mm:ss" -->

<!-- ATTRIBUTE end_time:
     Defines when an activity should end.  This is a REQUIRED
     attribute for the FIRST activity, and optional for the other
     ones.
     format := "hh:mm:ss" -->

<!-- ATTRIBUTE dur:
     Defines the duration of an activity.  This is a REQUIRED
     attribute for all activities but not for the first one.
     format := "hh:mm:ss" -->

<!-- ATTRIBUTE ref_id:
     The id of an entry in the reference_layer.  optional. -->

<!-- ============================================================ -->

<!-- ELEMENT leg:
     Defines one part of the trip between two activities. (I.e. a
     route with the car, a walk by foot, a change of the mode, a time
     where it has to wait for the bus, and so on.)  At the moment,
     Matsim provides only 'car mode' legs. (Oct. 2004) -->

<!-- ATTRIBUTE num:
     The numbering is done by Matsim, so there is no need to define
     that for the input plans.
     format := unsigned integer
     unit   := N/A -->

<!-- ATTRIBUTE mode:
     Defines the mode of this leg (e.g. car, bus, foot, bike, etc.).
     Matsim only provides car at the moment (Oct. 2004).
     format := string -->

<!-- ATTRIBUTE dep_time:
     Expected departure time for this leg.
     This is also for internal use.
     format := "hh:mm:ss" -->

<!-- ATTRIBUTE trav_time:
     Expected travel time for this leg.
     This is also for internal use.
     format := "hh:mm:ss" -->

<!-- ATTRIBUTE arr_time:
     Expected arrival time for this leg.
     This is also for internal use.
     format := "hh:mm:ss" -->

<!-- ============================================================ -->

<!-- ELEMENT route:
     When a leg is a path through a network, it is defined here. -->

<!-- ATTRIBUTE type:
     Defines the optimization type of the route. At the moment, a
     route can be optimized for distance, travel time, number of
     nodes passed, or number of intersections passed.
     format := string -->

<!-- ATTRIBUTE dist:
     The distance of the given route
     format := unsigned double -->

<!-- ATTRIBUTE trav_time:
     the travel time of the given route
     format := unsigned double -->

<!-- ATTRIBUTE num_nodes:
     the number of nodes passed of the given route
     format := unsigned double -->

<!-- ATTRIBUTE num_intersects:
     the number of intersections passed of the given route
     format := unsigned double -->

<!-- #PCDATA:
     Matsim expects a list of the node ids the traveler will
     travel TROUGH with whitespace in between.  The Matsim router
     calculates an initial route as a preprocess. -->

<!-- ============================================================ -->
