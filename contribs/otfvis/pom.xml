<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>org.matsim</groupId>
		<artifactId>contrib</artifactId>
		<version>16.0-SNAPSHOT</version>
	</parent>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*$*</exclude> <!-- exclude all inner classes -->
						<exclude>org/matsim/vis/otfvis/checklists/**/*.java</exclude> <!-- manual otfvis tests -->
					</excludes>

<!--					<forkMode>once</forkMode>-->
<!--					(no longer exists.  kai, nov'23) -->

					<!-- avoid out of memory errors: -->
					<argLine>-Xmx700m -Djava.awt.headless=true</argLine>
					<enableAssertions>false</enableAssertions> <!-- this should be set to true, but we still have some tests that don't
						work otherwise... -->
				</configuration>
			</plugin>
		</plugins>
	</build>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.matsim.contrib</groupId>
	<artifactId>otfvis</artifactId>
	<name>otfvis</name>
	<properties>
<!--		The jogl version is given in the pom.xml at the matsim-all level.  kai, nov'23-->

<!--		<jogl.version>2.5.0</jogl.version>-->
<!--		(This is already in the pom.xml of matsim-all.  kai, nov'23)-->

<!--		<jogl.version>2.4.0-matsim-1</jogl.version>-->
<!--		(This version has problems with the mac osx ARM architecture.  One can make it work when using an x86 implementation of Java ... it-->
<!--		then presumably runs via Rosetta and presumably more slowly than it could otherwise.  kai, nov'23)-->

<!--		<jogl.version>v2.4.0-rc4</jogl.version>-->
<!--		(For me, this fails with java.lang.UnsatisfiedLinkError: Can't load library:-->
<!--		/Users/kainagel/git/matsim-all/code-examples-matsim/natives/macosx-universal/gluegen_rt.  Don't know if this means that I have to-->
<!--		install something locally; I seem to remember that for the "matsim" release we were able to do without that.  kai, jan'23) -->

	</properties>

	<repositories>
		<repository>
			<id>jogl</id>
			<url>https://jogamp.org/deployment/maven/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>net.java.dev.timingframework</groupId>
			<artifactId>timingframework</artifactId>
			<version>1.0</version>
		</dependency>

<!--		Using the -main version means that the native libraries are loaded automagically.  See-->
<!--		https://jogamp.org/wiki/index.php/Maven#Add_dependencies_on_the_correct_packages-->
		<dependency>
			<groupId>org.jogamp.gluegen</groupId>
			<artifactId>gluegen-rt-main</artifactId>
			<version>${jogl.version}</version>
		</dependency>
<!--		(This is already in pom.xml of matsim-all.  kai, nov'23)-->



<!--		<dependency>-->
<!--			<groupId>org.jogamp.gluegen</groupId>-->
<!--			<artifactId>gluegen-rt</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-macosx-universal</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.gluegen</groupId>-->
<!--			<artifactId>gluegen-rt</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-linux-i586</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.gluegen</groupId>-->
<!--			<artifactId>gluegen-rt</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-windows-i586</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.gluegen</groupId>-->
<!--			<artifactId>gluegen-rt</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-windows-amd64</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.gluegen</groupId>-->
<!--			<artifactId>gluegen-rt</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-linux-amd64</classifier>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.jogamp.jogl</groupId>
			<artifactId>jogl-all-main</artifactId>
			<version>${jogl.version}</version>
		</dependency>
<!--		(This is already in pom.xml of matsim-all.  kai, nov'23)-->

<!--		<dependency>-->
<!--			<groupId>org.jogamp.jogl</groupId>-->
<!--			<artifactId>jogl-all</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-macosx-universal</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.jogl</groupId>-->
<!--			<artifactId>jogl-all</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-linux-i586</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.jogl</groupId>-->
<!--			<artifactId>jogl-all</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-windows-i586</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.jogl</groupId>-->
<!--			<artifactId>jogl-all</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-windows-amd64</classifier>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jogamp.jogl</groupId>-->
<!--			<artifactId>jogl-all</artifactId>-->
<!--			<version>${jogl.version}</version>-->
<!--			<classifier>natives-linux-amd64</classifier>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.jxmapviewer</groupId>
			<artifactId>jxmapviewer2</artifactId>
			<version>2.8</version>
		</dependency>
	</dependencies>
</project>
