<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v1.dtd">
<config>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationAffectsDuration" value="true" />

		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="0.0" />
	</module>

<!-- ====================================================================== -->

	<module name="controler" >

		<!-- Default=false;  -->
		<param name="enableLinkToLinkRouting" value="false" />

		<!-- Default=xml; Specifies the file format for writing events. Currently supported: txt, xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />

		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />

		<!-- Default=1000;  -->
		<param name="lastIteration" value="10" />

		<!-- Defines which mobility simulation will be used. Currently supported: queueSimulation qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config.
		For 'queueSimulation', add a module 'simulation' to the config. -->
		<param name="mobsim" value="qsim" />

		<param name="outputDirectory" value="./test/output/org/matsim/contrib/evacuation/scenariogenerator/ScenarioGeneratorTest/testScenarioGenerator//output" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />

		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="10" />

		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />

		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />

		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="facilities" >
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
		<param name="coordinateSystem" value="EPSG:3395" />
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>

<!-- ====================================================================== -->

	<module name="evacuation" >
		<param name="evacuationAreaFile" value="./test/input/org/matsim/contrib/evacuation/scenariogenerator/ScenarioGeneratorIT/testScenarioGenerator/evacuation_area.shp" />
		<param name="networkFile" value="./test/input/org/matsim/contrib/evacuation/scenariogenerator/ScenarioGeneratorIT/testScenarioGenerator/lenzen.osm" />
		<param name="outputDir" value="./test/output/org/matsim/contrib/evacuation/scenariogenerator/ScenarioGeneratorIT/testScenarioGenerator/" />
		<param name="populationFile" value="./test/input/org/matsim/contrib/evacuation/scenariogenerator/ScenarioGeneratorIT/testScenarioGenerator/population.shp" />
		<param name="sampleSize" value="0.787" />
	</module>

<!-- ====================================================================== -->

	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="linkStats" >

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />

		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="locationchoice" >
		<param name="algorithm" value="random" />
		<param name="analysisBinSize" value="20000.0" />
		<param name="analysisBoundary" value="200000.0" />
		<param name="centerNode" value="null" />
		<param name="destinationSamplePercent" value="100.0" />
		<param name="epsilonDistribution" value="gumbel" />
		<param name="epsilonScaleFactors" value="null" />
		<param name="fAttributesFileName" value="null" />
		<param name="fkValuesFile" value="null" />
		<param name="flexible_types" value="null" />
		<param name="idExclusion" value="2147483647" />
		<param name="maxDCScoreFile" value="null" />
		<param name="maxDistanceDCScore" value="-1.0" />
		<param name="maxRecursions" value="1" />
		<param name="pBetasFileName" value="null" />
		<param name="pkValuesFile" value="null" />
		<param name="planSelector" value="SelectExpBeta" />
		<param name="prefsFile" value="null" />
		<param name="probChoiceSetSize" value="5" />
		<param name="radius" value="null" />
		<param name="randomSeed" value="221177" />
		<param name="recursionTravelSpeedChange" value="0.1" />
		<param name="restraintFcnExp" value="0.0" />
		<param name="restraintFcnFactor" value="0.0" />
		<param name="scaleFactor" value="1" />
		<param name="travelSpeed_car" value="8.5" />
		<param name="travelSpeed_pt" value="5.0" />
		<param name="tt_approximationLevel" value="0" />
	</module>

<!-- ====================================================================== -->

	<module name="otfvis" >
		<param name="agentSize" value="120.0" />
		<param name="coloringScheme" value="standard" />
		<param name="drawNonMovingItems" value="false" />
		<param name="drawTransitFacilities" value="true" />
		<param name="drawTransitFacilityIds" value="true" />
		<param name="leftMouseFunc" value="Zoom" />
		<param name="linkWidth" value="30.0" />
		<param name="linkwidthIsProportionalTo" value="numberOfLanes" />
		<param name="mapBaseURL" value="" />
		<param name="mapLayer" value="" />
		<param name="mapOverlayMode" value="true" />
		<param name="middleMouseFunc" value="Pan" />
		<param name="rightMouseFunc" value="Select" />
		<param name="showTeleportation" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="parallelEventHandling" >

		<!-- estimated number of events during mobsim run, useful for configuration -->
		<param name="estimatedNumberOfEvents" value="null" />

		<!-- number of threads for parallel events handler.  0 or null means parallel events handler is disabled -->
		<param name="numberOfThreads" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- logit model scale parameter. default: 2.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />

		<param name="PathSizeLogitBeta" value="1.0" />

		<!-- [utils/hr] utility for arriving late (i.e. after the latest start time).  normally negative -->
		<param name="lateArrival" value="0.0" />

		<!-- [utils/hr] utility for departing early (i.e. before the earliest end time).  Normally negative.  Probably implemented correctly, but not tested. -->
		<param name="earlyDeparture" value="-0.0" />

		<!-- [utils/hr] marginal utility of doing an activity.  normally positive.  also the opportunity cost of time if agent is doing nothing. -->
		<param name="performing" value="0.0" />

		<!-- [utils/hr] additional marginal utility for waiting. normally negative. this comes on top of the opportunity cost of time.  Probably implemented correctly, but not tested. -->
		<param name="waiting" value="-0.0" />

		<!-- [utils/hr] additional marginal utility for waiting for a pt vehicle. normally negative. this comes on top of the opportunity cost of time. Default: if not set explicitly, it is equal to traveling_pt!!! -->
		<param name="waitingPt" value="-6.0" />

		<!-- [utils/unit_of_money] conversion of money (e.g. toll, distance cost) into utils. Normall positive (i.e. toll/cost/fare are processed as negative amounts of money). -->
		<param name="marginalUtilityOfMoney" value="1.0" />

		<!-- [utils] utility of switching a line (= transfer penalty).  Normally negative -->
		<param name="utilityOfLineSwitch" value="-1.0" />

		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />

		<!-- **************************** -->
		<param name="activityType_0" value="pre-evac" />

		<param name="activityPriority_0" value="1.0" />
		<param name="activityTypicalDuration_0" value="00:00:49" />
		<param name="activityMinimalDuration_0" value="00:00:49" />
		<param name="activityOpeningTime_0" value="00:00:49" />
		<param name="activityLatestStartTime_0" value="00:00:49" />
		<param name="activityEarliestEndTime_0" value="00:00:49" />
		<param name="activityClosingTime_0" value="00:00:49" />
		<param name="scoringThisActivityAtAll_0" value="true" />

		<!-- **************************** -->
		<param name="activityType_1" value="post-evac" />

		<param name="activityPriority_1" value="1.0" />
		<param name="activityTypicalDuration_1" value="00:00:49" />
		<param name="activityMinimalDuration_1" value="00:00:49" />
		<param name="activityOpeningTime_1" value="00:00:49" />
		<param name="activityLatestStartTime_1" value="00:00:49" />
		<param name="activityEarliestEndTime_1" value="00:00:49" />
		<param name="activityClosingTime_1" value="00:00:49" />
		<param name="scoringThisActivityAtAll_1" value="true" />

		<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling_car" value="-6.0" />

		<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
		<param name="marginalUtlOfDistance_car" value="0.0" />

		<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
		<param name="monetaryDistanceCostRate_car" value="0.0" />

		<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constant_car" value="0.0" />

		<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling_pt" value="-6.0" />

		<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
		<param name="marginalUtlOfDistance_pt" value="0.0" />

		<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
		<param name="monetaryDistanceCostRate_pt" value="0.0" />

		<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constant_pt" value="0.0" />

		<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling_walk" value="-6.0" />

		<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
		<param name="marginalUtlOfDistance_walk" value="0.0" />

		<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
		<param name="monetaryDistanceCostRate_walk" value="0.0" />

		<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constant_walk" value="0.0" />

		<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling_bike" value="-6.0" />

		<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
		<param name="marginalUtlOfDistance_bike" value="0.0" />

		<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
		<param name="monetaryDistanceCostRate_bike" value="0.0" />

		<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constant_bike" value="0.0" />

		<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling_other" value="-6.0" />

		<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
		<param name="marginalUtlOfDistance_other" value="0.0" />

		<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
		<param name="monetaryDistanceCostRate_other" value="0.0" />

		<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
		<param name="constant_other" value="0.0" />
	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >

		<!-- factor with which beeline distances (and therefore times) are multiplied in order to obtain an estimate of the network distances/times.  Default is something like 1.3 -->
		<param name="beelineDistanceFactor" value="1.3" />

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car,ride" />

		<!-- Free-speed factor for a teleported mode based on freespeed: freespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. freespeedFactor wins over teleportedModeSpeed, if both are set (says michaz). -->
		<param name="teleportedModeFreespeedFactor_pt" value="2.0" />

		<!-- Speed for a teleported mode based on beeline-distance: (<beeline distance> * beelineDistanceFactor) / speed. Insert a line like this for every such mode. -->
		<param name="teleportedModeSpeed_bike" value="4.166666666666667" />

		<!-- Speed for a teleported mode based on beeline-distance: (<beeline distance> * beelineDistanceFactor) / speed. Insert a line like this for every such mode. -->
		<param name="teleportedModeSpeed_undefined" value="13.88888888888889" />

		<!-- Speed for a teleported mode based on beeline-distance: (<beeline distance> * beelineDistanceFactor) / speed. Insert a line like this for every such mode. -->
		<param name="teleportedModeSpeed_walk" value="0.8333333333333333" />
	</module>

<!-- ====================================================================== -->

	<module name="ptCounts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />

		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />

		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />

		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="0.787" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />

		<!-- default: FIFO; options: FIFO PassingQ -->
		<param name="linkDynamics" value="FIFO" />

		<!-- Defines which mode should be the qsim `main' (=congested) mode. Technically, this is the mode that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Needs to be a vehicular mode to make sense. -->
		<param name="mainMode" value="car" />

		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />

		<!-- Use number of threads > 1 for parallel version using the specified number of threads -->
		<param name="numberOfThreads" value="1" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- `maxOfStarttimeAndEarliestActivityEnd' (default behavior) or `onlyUseStarttime' -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />

		<!-- snapshotStyle: `equiDist' (vehicles equidistant on link) or `queue' (vehicles queued at end of link) or `withHolesExperimental' (experimental!!) -->
		<param name="snapshotStyle" value="equiDist" />

		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="0.787" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />

		<param name="timeStepSize" value="00:00:01" />

		<!-- `queue' for the standard queue model, `withHolesExperimental' (experimental!!) for the queue model with holes -->
		<param name="trafficDynamics" value="queue" />

		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport, wait, exception -->
		<param name="vehicleBehavior" value="teleport" />
	</module>

<!-- ====================================================================== -->

	<module name="roadpricing" >
	</module>

<!-- ====================================================================== -->

	<module name="scenario" >

		<!-- Set this parameter to true if knowledge should be used, false if not. -->
		<param name="useKnowledge" value="true" />

	</module>

<!-- ====================================================================== -->

	<module name="signalsystems" >
		<param name="ambertimes" value="null" />
		<param name="intergreentimes" value="null" />
		<param name="signalcontrol" value="null" />
		<param name="signalgroups" value="null" />
		<param name="signalsystems" value="null" />
		<param name="useAmbertimes" value="false" />
		<param name="useIntergreentimes" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="3" />

		<!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_1" value="ReRoute" />

		<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_1" value="0.1" />

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_1" value="75" />

		<!-- path to external executable (if applicable) -->
		<param name="ModuleExePath_1" value="null" />

		<!-- subpopulation to which the module applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
		<param name="ModuleSubpopulation_1" value="null" />

		<!-- **************************** -->
		<param name="Module_2" value="ChangeExpBeta" />

		<param name="ModuleProbability_2" value="0.9" />
		<param name="ModuleDisableAfterIteration_2" value="null" />
		<param name="ModuleExePath_2" value="null" />
		<param name="ModuleSubpopulation_2" value="null" />

		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />

		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- time out value (in seconds) after which matsim will consider the external module as failed -->
		<param name="ExternalExeTimeOut" value="3600" />

		<!-- name of PlanSelector for plans removal.  If not full class name, resolved in StrategyManagerConfigLoader.  default is `null', which eventually calls SelectWorstPlan. This is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="null" />

		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
	</module>

<!-- ====================================================================== -->

	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>

<!-- ====================================================================== -->

	<module name="transit" >

		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />

		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />

		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >

		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />

		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="120" />

		<param name="travelTimeCalculator" value="TravelTimeCalculatorHashMap" />

		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>

<!-- ====================================================================== -->

	<module name="vspExperimental" >

		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="minOfDurationAndEndTime" />

		<!-- REQUIRED: file with HBEFA 3.1 fleet average cold emission factors -->
		<param name="averageFleetColdEmissionFactorsFile" value="null" />

		<!-- REQUIRED: file with HBEFA 3.1 fleet average warm emission factors -->
		<param name="averageFleetWarmEmissionFactorsFile" value="null" />

		<!-- (do not use) set chainBasedModes for subTourModeChoice by Yu. E.g. "car,bike", "car" -->
		<param name="chainBasedModes" value="car" />

		<!-- OPTIONAL: file with HBEFA 3.1 detailed cold emission factors -->
		<param name="detailedColdEmissionFactorsFile" value="null" />

		<!-- OPTIONAL: file with HBEFA 3.1 detailed warm emission factors -->
		<param name="detailedWarmEmissionFactorsFile" value="null" />

		<!-- REQUIRED: mapping from input road types to HBEFA 3.1 road type strings -->
		<param name="emissionRoadTypeMappingFile" value="null" />

		<!-- definition of a vehicle for every person (who is allowed to choose a vehicle in the simulation):
		 - REQUIRED: vehicle type Id must start with the respective HbefaVehicleCategory followed by `;'
		 - OPTIONAL: if detailed emission calculation is switched on, vehicle type Id should aditionally contain HbefaVehicleAttributes (`Technology;SizeClasse;EmConcept'), corresponding to the strings in detailedWarmEmissionFactorsFile -->
		<param name="emissionVehicleFile" value="null" />

		<!-- (do not use) Set this filename of MZ05 daily analysis -->
		<param name="inputMZ05File" value="" />

		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />

		<param name="isGeneratingBoardingDeniedEvent" value="false" />

		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />

		<param name="logitScaleParamForPlansRemoval" value="1.0" />

		<!-- changes MATSim's global time format used in output files. Can be used to enforce writing fractional seconds e.g. in output_plans.  default is `hh:mm:ss' (because of backwards compatibility). see Time.java for possible formats -->
		<param name="matsimGlobalTimeformat" value="HH:mm:ss" />

		<!-- (do not use) set the traffic mode option for subTourModeChoice by Yu -->
		<param name="modes" value="car, pt" />

		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />

		<!-- first iteration of MSA score averaging. The matsim theory department suggests to use this together with switching of choice set innovation, but it has not been tested yet. -->
		<param name="scoreMSAStartsAtIteration" value="null" />

		<!-- if true then detailed emission factor files must be provided! -->
		<param name="usingDetailedEmissionCalculation" value="false" />

		<!-- Options: `ignore', `warn', `abort'.  Default: either `ignore' or `warn'.
		When violating VSP defaults, this results in nothing, warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />

		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="false" />
	</module>

<!-- ====================================================================== -->

</config>
